# Stage 1: Build the Angular app
FROM node:12.11.1 AS build

# Set the working directory
WORKDIR /app

# Copy package.json and package-lock.json (if available)
COPY package*.json ./

# Install dependencies
RUN npm install --force

# Copy the rest of the application files
COPY . .

# Fix file permissions
RUN chmod -R 755 /app

# Ensure firebase-messaging-sw.js exists in the source directory
RUN ls -l /app/src/firebase-messaging-sw.js || echo "File not found"

# Explicitly copy the firebase-messaging-sw.js file if needed
RUN mkdir -p /app/dist/association && cp /app/src/firebase-messaging-sw.js /app/dist/association/firebase-messaging-sw.js

# Build the Angular application
RUN npm run build

# Stage 2: Create production image with Nginx on Alpine Edge
FROM nginx:1.26-alpine AS production

# Switch repository to Alpine edge for updated libexpat
RUN echo "https://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories && \
    echo "https://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories && \
    apk update && apk upgrade && \
    apk add --no-cache curl libexpat

# Copy built Angular app from the build stage
COPY --from=build /app/dist/association /usr/share/nginx/html

# Copy custom Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

